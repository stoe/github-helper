on:
  push:
    tags:
      - 'v*'

name: release

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true

      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Cache node modules
        uses: actions/cache@v2
        id: npm-cache
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: npm-

      - name: Install Dependencies
        run: npm install --ignore-scripts --pure-lockfile
        if: steps.npm-cache.outputs.cache-hit != 'true'

      - name: Build
        run: npm run build
        env:
          CI: true

      - name: Create release
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') }}

      - name: Upload release archive (zip)
        uses: actions/upload-release-asset@v1
        id: upload-release-asset-zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/github-helper.zip
          asset_name: github-helper.zip
          asset_content_type: application/zip
      # - name: Upload release archive (crx)
      #   uses: actions/upload-release-asset@v1
      #   id: upload-release-asset-crx
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./build/github-helper.crx
      #     asset_name: github-helper.crx
      #     asset_content_type: application/x-chrome-extension
